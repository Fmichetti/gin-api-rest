definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  models.Alternativa:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      resposta:
        type: boolean
      texto:
        type: string
      updatedAt:
        type: string
    type: object
  models.Aluno:
    properties:
      createdAt:
        type: string
      data_nascimento:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      nome:
        type: string
      turma_id:
        type: integer
      updatedAt:
        type: string
      user_id:
        type: integer
    type: object
  models.Professor:
    properties:
      contato:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      especializacao:
        type: string
      id:
        type: integer
      nome:
        type: string
      updatedAt:
        type: string
      user_id:
        type: integer
    type: object
  models.Questao:
    properties:
      alternativas:
        items:
          $ref: '#/definitions/models.Alternativa'
        type: array
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      enunciado:
        type: string
      id:
        type: integer
      materia_id:
        type: integer
      updatedAt:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: A Test API using GO, Gin and Gorm
  title: Test API
  version: "1.0"
paths:
  /alunos:
    get:
      description: Exibe todos os alunos
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Aluno'
            type: array
      tags:
      - Alunos
    post:
      description: Cria um novo aluno
      parameters:
      - description: Aluno object
        in: body
        name: aluno
        required: true
        schema:
          $ref: '#/definitions/models.Aluno'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Aluno'
            type: array
      tags:
      - Alunos
  /alunos/{id}:
    delete:
      description: Realiza uma busca baseada pelo ID
      produces:
      - application/json
      responses:
        "200":
          description: OK
      tags:
      - Alunos
    get:
      description: Realiza uma busca baseada pelo ID
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Aluno'
      tags:
      - Alunos
    patch:
      description: Realiza uma edição baseada pelo ID
      parameters:
      - description: Aluno object
        in: body
        name: aluno
        required: true
        schema:
          $ref: '#/definitions/models.Aluno'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      tags:
      - Alunos
  /alunos/{nome}:
    get:
      description: Realiza uma busca baseada pelo Nome
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Aluno'
      tags:
      - Alunos
  /professores:
    get:
      description: Exibe todos os professores
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Professor'
            type: array
      tags:
      - Professores
  /professores/{id}:
    delete:
      description: Realiza uma busca baseada pelo ID
      produces:
      - application/json
      responses:
        "200":
          description: OK
      tags:
      - Professores
    patch:
      description: Realiza uma edição baseada pelo ID
      parameters:
      - description: Professor object
        in: body
        name: professor
        required: true
        schema:
          $ref: '#/definitions/models.Professor'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      tags:
      - Professores
  /professores/{nome}:
    get:
      description: Realiza uma busca baseada pelo Nome
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Professor'
      tags:
      - Professores
  /professors:
    post:
      description: Cria um novo professor
      parameters:
      - description: Professor object
        in: body
        name: professor
        required: true
        schema:
          $ref: '#/definitions/models.Professor'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Professor'
            type: array
      tags:
      - Professores
  /professors/{id}:
    get:
      description: Realiza uma busca baseada pelo ID
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Professor'
      tags:
      - Professores
  /questoes:
    post:
      description: Cria uma nova Questao
      parameters:
      - description: Questao object
        in: body
        name: questao
        required: true
        schema:
          $ref: '#/definitions/models.Questao'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Questao'
            type: array
      tags:
      - Questoes
swagger: "2.0"
